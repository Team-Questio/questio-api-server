name: Deploy on EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Create resourse
        env:
          APPLICATION_PROPERTIES: ${{ secrets.APPLICATION_PROPERTIES }}
          GOOGLE_OAUTH_INFO: ${{ secrets.GOOGLE_OAUTH_INFO }}
          KAKAO_OAUTH_INFO: ${{ secrets.KAKAO_OAUTH_INFO }}
          NAVER_OAUTH_INFO: ${{ secrets.NAVER_OAUTH_INFO }}
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.properties
          echo "$APPLICATION_PROPERTIES" > src/main/resources/application.properties
          touch ./src/main/resources/google-oauth-info.yaml
          echo "$GOOGLE_OAUTH_INFO" > src/main/resources/google-oauth-info.yaml
          touch ./src/main/resources/kakao-oauth-info.yaml
          echo "$KAKAO_OAUTH_INFO" > src/main/resources/kakao-oauth-info.yaml
          touch ./src/main/resources/naver-oauth-info.yaml
          echo "$NAVER_OAUTH_INFO" > src/main/resources/naver-oauth-info.yaml

      - name: Execute Gradle build
        run: ./gradlew build -x test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/questio .

      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/questio

  Deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH로 ec2 접속하기
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script_stop: true
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/questio:latest
            docker stop questio || true
            docker rm questio || true
            docker run -d --name questio -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/questio:latest